.formContainer {}
.widForm {}
.widForm > .widFormFieldSet {

    margin: 4px;
    padding: 8px;
}
.widError {
    display:none;
    background: var(--error-background-color);
    padding-top: 3px;
    padding-bottom: 1px;
    color: var(--error-color);
    border-bottom: 2px solid var(--dark-color);
    font-size: var(--error-font-size);
}
.widField {}

.widError ul { list-style-type: none; }
.widError > ul > li:before {
    font-family: var(--icon-font);
    color: var(--error-color);
    content: var(--icon-message-alt-error);
    margin-right: 5px;
}

.StdInputContainer {
    margin-bottom: var(--StdInputContainer-margin-bottom);
    font-size: var(--StdInputContainer-font-size);
    margin-top: var(--StdInputContainer-margin-top);
    padding: var(--StdInputContainer-padding);
    display: flex;    
    color: var(--light-color);    
    flex-direction: row;
    border-bottom: var(--StdInputContainer-border-bottom);    
}

.required { padding: 10px 10px 0 0; }

.StdInputContainer > .required:before {
    font-family: var(--icon-font);
    color: var(--pallette-color-primary-3);
    content: var(--icon-required);
}

.StdInputContainer > .help:before {
    font-family: var(--icon-font);
    color: var(--color-help);
    content: var(--icon-help);
    margin: 25px 10px 0 0;
    font-weight: 600;
}

.StdInputContainer .label {
    min-width:var(--input-label-min-width);
    max-width:var(--input-label-max-width);
    margin: var(--label-StdInputContainer-margin-bottom) 0 var(--label-StdInputContainer-margin-bottom) 0;
    font-size: var(--label-StdInputContainer-font-size);
    color: var(--color-label-edit-model);
}


.StdInputContainer > .input { width:100%}


.StdInputContainer.String,
.StdInputContainer.Boolean,
.StdInputContainer.Enum,
.StdInputContainer.State,
.StdInputContainer.Relationship{

}

.StdInputContainer.Container > .label,
.StdInputContainer.Dictionary  >.label,
.StdInputContainer.TypeSwitcher >.label {
    min-width:inherit !important;
    max-width:inherit !important;

}
.StdInputContainer.Container:after,
.StdInputContainer.Dictionary:after,
.StdInputContainer.TypeSwitcher:after {
    content:'';
    /* width:100% */
}
.StdInputContainer > .help {
    font-size: smaller;    
    color: var(--color-help);
    margin-left: 10px;
    padding: inherit;
}
.StdInputContainer.Container> .help,
.StdInputContainer.Dictionary> .help,
.StdInputContainer.TypeSwitcher > .help {
    order: 1 !important;
    margin-bottom: 3px;
}

.StdInputContainer.Container> .input,
.StdInputContainer.Dictionary> .input,
.StdInputContainer.TypeSwitcher > .input {
    order:1;
    width:100%
}

.widField.left > .StdInputContainer > .inputContainerLabel {
    float: left;
    min-width: 150px;
}
.widField.left > .StdInputContainer > .inputContainerInput {}
.widField.left > .StdInputContainer > .inputContainerHelp {}

.widFormButtons {}



.StdFormButtons {    
    padding: var(--StdFormButtons-padding);
    text-align: var(--StdFormButtons-text-align);
}

.StdFormButtons input[type=button].button-ok {
    background: var(--StdFormButtons-button-ok-background);
    color: var(--StdFormButtons-button-ok-color);
    min-width: var(--StdFormButtons-button-width);
    border-width: var(--input-border-width);
    border-style: var(--input-border-style);
    border-color: var(--input-border-color);
    cursor: pointer;
}
.StdFormButtons input[type=button].button-cancel {
    background: var(--StdFormButtons-button-cancel-background);
    color: var(--StdFormButtons-button-cancel-color);
    min-width: var(--StdFormButtons-button-width);
    cursor: pointer;
}

.StdFormButtons input[type=button].button-disabled {
    filter:brightness(0.5);
}



.StdFormButtons > .buttonContainer {}

.StdFormButtons input[type=button]:hover {}

/* Sobreescritura de estilos de jqwidgets.css */
.jqx-tooltip-errored {


    border:var(--error-border) !important;
}
.jqx-tooltip-text-errored {
    color:var(--error-color) !important;
    font-family:var(--error-font) !important;
    font-size:var(--error-font-size) !important;
    background-color:var(--error-background-color) !important;
}
.jqx-tooltip-text-errored:before {
    font-family:var(--icon-font);
    content:var(--icon-error);
    margin-right:10px;
    font-size:14px;
    color:white;
}
.jqx-tooltip-main-errored {
    border-width:0px !important;
}
.jqx-widget-errored.jqx-tooltip-arrow {
    border-color:var(--error-border-color) !important;
}
.jqx-listitem-element {
    font-family: var(--main-font);
}
.jqx-listitem-state-hover {
    font-family: var(--main-font) !important;
}
.DictionaryInput {
    background-color:var(--light-darker-color);
    padding:4px;
}
.Dictionary-row-complex {display:flex}
.Dictionary-mainKeyList {
    padding: 10px;
    color: var(--color-label-edit-model);
    /* border-right: 2px solid var(--light-darker-darker-color); */
}
.Dictionary-keys {
    background-color: var(--light-darker-darker-color);
    padding: 7px;
}
.Dictionary-keyList
{
    background-color: var(--contrast-1);
    list-style-type: none;
    padding-left: 0;
    /* max-height: 150px; */
    overflow-y: auto;
    margin-top: 0px;
}
.Dictionary-keylist-item a {
    color: var(--light-darker-color);
    display: block;
    width: 100%;
    text-decoration: none;
    margin-bottom: 2px;
    padding-bottom: 1px;
    border-bottom: 1px solid var(--dark-lighter-color);
    padding-left: 10px;
    padding-right: 25px;
}
.Dictionary-keylist-item a:hover {
    color: var(--light-color);
}
.Dictionary-current {
    width: 100%;
    padding-left: 16px;
    border-left: 4px solid var(--dark-lighter-color);
}
.Dictionary-removeButton:before, .arraySimpleValue-removeButton:before {
    content:var(--icon-trash);
    padding-right: 5px;
}
.Dictionary-removeButton, .arraySimpleValue-removeButton {
    font-family:var(--icon-font);
    font-style:normal;
    color:var(--error-background-color);
    cursor:pointer;
}
.Dictionary-removeButton:hover, .arraySimpleValue-removeButton:hover {
    color:var(--error-background-color-light);
}
.Dictionary-keylist-item {
    display:flex;
}

.TypeSwitcherInput .TypeSwitcherSelector {
    background-color: var(--contrast-0);
    color: var(--white-color-font);
    border: 2px solid var(--contrast-0);
    padding: 2px;
}
.TypeSwitcherInput .TypeSwitcherField {
    margin-left: 17px;
    border-left: 3px solid var(--contrast-0);
    padding-top: 5px;
    padding-left: 9px;
}
.StdInputContainer.TypeSwitcher:after {
    content:'';
    /* width:100% */
}

.StdInputContainer.TypeSwitcher > .input {
    order:1;
}

.StdInputContainer.TypeSwitcher {
    display: inline-grid;
}


.NewItem {}
.NewItem-addButton {
    margin-top: 5px;
    text-align: center;
}
.NewItem-addButton:before {
    content: var(--icon-add);
    font-family: var(--icon-font);
    font-size: 28px;
    color: var(--contrast-0);
    cursor: cell;
}

/* Array Styles (simple & complex) */
.arrayValues { margin-bottom: var(--ArraySimpleValue-margin-bottom); }

.arraySimpleValue {
    margin-right: var(--ArraySimpleValue-margin-right);
    margin-bottom: var(--ArraySimpleValue-margin-bottom2);
    padding: var(--ArraySimpleValue-padding);
    border-radius: var(--ArraySimpleValue-border-radius);
    border: var(--ArraySimpleValue-border-size) solid var(--ArraySimpleValue-border-color);
    color: var(--ArraySimpleValue-font-color);
    background: var(--ArraySimpleValue-background-color);
    font-size: var(--ArraySimpleValue-font-size);
    cursor: pointer;
    display: inline-block;
}

.arraySimpleValue:hover, .arrayValueComplex:hover { color: var(--ArraySimpleValue-font-color-hover); background: var(--ArraySimpleValue-background-color-hover); }

a.arrayValueComplex.array_selected, span.arraySimpleValue.array_selected {
    background-color: var(--contrast-0);
    border: 3px solid var(--ArraySimpleValue-border-color);
}

.arrayValueComplex {
    padding: var(--ArrayComplexValue-padding);
    border-radius: var(--ArrayComplexValue-border-radius);
    border: var(--ArrayComplexValue-border-size) solid var(--ArrayComplexValue-border-color);
    color: var(--ArrayComplexValue-font-color) !important;
    background: var(--ArrayComplexValue-background-color);
    font-size: var(--ArrayComplexValue-font-size) !important;
    cursor: pointer;
    display: inline-block;
    min-width: auto;
    margin-bottom: var(--ArrayComplexValue-margin-bottom);
}

.arrayContainerComplexValues {
    width: var(--ArrayComplexValue-container-width);
    margin-bottom: var(--ArrayComplexValue-container-margin-bottom);
}

.contentRelatedArrayComplex { 
    width: var(--ArrayComplex-contentRelated-width);
    border-radius: var(--ArrayComplex-contentRelated-border-radius);
    border: var(--ArrayComplex-contentRelated-border-size) solid var(--contrast-0);
    height: fit-content;
}


/* ocultar el input del container cuando se tiene FIXED */

.StdInputContainer.TYPE.String {
    display: none;
}

/* Custom class (seleccionado) for active element in Dictionary */
li.Dictionary-keylist-item.seleccionado {    
    background-color: var(--contrast-0);    
    border-left: 10px solid #b05a1c;
}

li.Dictionary-keylist-item.seleccionado a { color: var(--white-color-font); letter-spacing: 1px; }

li.Dictionary-keylist-item.seleccionado a:hover { font-style: none; color: var(--help-tooltip-font-color); }


/* ocultacion campo "help" en StdInputContainer si esta vacio */
.help.hidden-help, .help.tooltip.hidden-help { display: none; }


.StdInputContainer.Array, .StdInputContainer.TypeSwitcher, .ContainerInput.TypeSwitcher, .StdInputContainer.Dictionary {
    display: flex;
    flex-wrap: wrap;
    flex-direction: unset;    
}

.StdInputContainer.Container, .StdInputContainer.SOURCE.Container, .StdInputContainer.STORAGE.Container, .StdInputContainer.MYSQL.Container {
    margin-bottom: var(--StdInputContainer-margin-bottom);
    font-size: var(--StdInputContainer-font-size);
    margin-top: var(--StdInputContainer-margin-top);
    padding: var(--StdInputContainer-padding);
    display: flex;
    color: var(--light-color);
    flex-wrap: wrap;
    flex-direction: row;
    border-bottom: none !important;
    width: 99%;
}


/* helpNode estilos para stdInputContainer de los nodos */
.help.tooltip { 
    position: relative;
    display: inline-block;
    cursor: help;
}

span.tooltiptext{
    visibility: hidden;
    width: var(--help-tooltip-width);
    background-color: var(--help-tooltip-bg-color);
    color: var(--help-tooltip-font-color);
    text-align: center;
    padding: var(--help-tooltip-padding);
    border-radius: var(--help-tooltip-border-radius);    
    border: solid var(--help-tooltip-border-size) var(--help-tooltip-border-color);
    position: absolute;
    z-index: 1; 
    margin-left: -84px;
    opacity: 0;
    transition: opacity 1s;
}

.help.tooltip:hover span.tooltiptext {
    visibility: visible;
    opacity: 1;
}


/* Estilo para el scrollbar dentro ventanas widgets */
::-webkit-scrollbar { display: none; }

::-webkit-scrollbar-thumb {
    display: none;
    background-color: #b3b6b9;
    border-radius: 20px;
    border: 6px solid transparent;
    background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover { background-color: #677989; }
::-webkit-scrollbar-track { background-color: transparent; }
::-webkit-scrollbar-thumb:horizontal { background-color: transparent; display: none; }